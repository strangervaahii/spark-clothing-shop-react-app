{"version":3,"file":"static/js/576.e22ed181.chunk.js","mappings":"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","sources":["components/HelmetSetup/HelmetSetup.js","pages/ProductsPage/ProductsPage.js","utils/fetchApi.js"],"sourcesContent":["// Import React, PropTypes, Helmet and helmet provider\r\nimport React from 'react';\r\nimport Proptypes from 'prop-types';\r\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\r\n\r\n// Define the Helmet Setup\r\nconst HelmetSetup = ({ title }) => {\r\n  return (\r\n    // Defining the HelmetProvider\r\n    <HelmetProvider >\r\n      <Helmet>\r\n        <title>{title}</title>\r\n      </Helmet>\r\n    </HelmetProvider>\r\n  );\r\n}\r\n// proptypes of the title\r\nHelmetSetup.propTypes = {\r\n  title: Proptypes.string\r\n};\r\n\r\n// Export the HelmetSetup component\r\nexport default HelmetSetup;\r\n","// Importing React and useState and useEffect hooks from React library\r\nimport React, { useEffect, useState } from 'react';\r\nimport { NavLink, useLocation } from 'react-router-dom';\r\nimport HelmetSetup from '../../components/HelmetSetup/HelmetSetup';\r\n\r\n// Importing the fetchApi function from a separate file\r\nimport { fetchApi } from '../../utils/fetchApi';\r\nimport './ProductsPage.scss';\r\n\r\nconst useQuery = () => new URLSearchParams(useLocation().search);\r\n\r\n// Defining a functional component called ProductsPage\r\nconst ProductsPage = () => {\r\n  // Defining state variables to manage loading, error, products data, and sort order\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isError, setIsError] = useState(false);\r\n  const [products, setProducts] = useState([]);\r\n  // const [sortBy, setSortBy] = useState();\r\n\r\n  // Initializing the url variable to null\r\n  let url = null;\r\n\r\n  // Using the useQuery hook to get the 'category' query parameter from the URL\r\n  const query = useQuery();\r\n  const queryParam = query.get('category');\r\n\r\n  // Using a switch statement to set the url variable based on the query parameter and sort order\r\n  if (queryParam === 'kids') {\r\n    url = 'http://localhost:5000/products?category=kids'\r\n  } else if (queryParam === 'men') {\r\n    url = 'http://localhost:5000/products?category=men'\r\n  } else if (queryParam === 'women') {\r\n    url = 'http://localhost:5000/products?category=women'\r\n  } else {\r\n    url = 'http://localhost:5000/products'\r\n  }\r\n\r\n  // Using the useEffect hook to fetch data from the API based on the current url and sort order\r\n  useEffect(() => {\r\n    fetchApi(url)\r\n      .then((resInJson) => {\r\n        // If the response status is not 404, set the products data and change the loading and error states\r\n        if ((resInJson.status !== 404)) {\r\n          // Using setTimeout to simulate a loading delay of 1 second\r\n          setTimeout(() => {\r\n            setIsLoading(false);\r\n            setIsError(false);\r\n            setProducts(resInJson);\r\n          }, 1000);\r\n        } else {\r\n          // If the response status is not 404, set the products data and change the loading and error states\r\n          setIsLoading(false);\r\n          setIsError(true);\r\n          setProducts([]);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setIsLoading(false);\r\n        setIsError(true);\r\n        setProducts([]);\r\n      })\r\n  }, [url]);\r\n\r\n  // const handleSortPrice = (sortOrder) => {\r\n  //   setSortBy(sortOrder);\r\n  // }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className='text-center'>\r\n        <div className='spinner-border text-danger'></div>\r\n      </div>\r\n    );\r\n  }\r\n  if (isError) {\r\n    return (\r\n      <div className='alert alert-danger'>\r\n        Sorry! Unable to fetch product page ! Try Again Later.\r\n      </div>\r\n    )\r\n  }\r\n  return (\r\n    <>\r\n      <HelmetSetup title='ProductsPage' />\r\n      <div className='container'>\r\n        <div className='row'>\r\n          <div className='col-md-3 bg-primary'>\r\n            <ul className='list-group'>\r\n              <li className='list-group-item list-group-item-action active'>\r\n                <NavLink to='/products' className='text-white text-decoration-none'>\r\n                  PRODUCT\r\n                </NavLink>\r\n              </li>\r\n              {/* Categories of all products based on men, women and kids */}\r\n              <h5 className='list-group-item list-group-item-action mb-0 p-3'>Categories</h5>\r\n              <li className='list-group-item list-group-item-action'>\r\n                {/* link for all products */}\r\n                <NavLink\r\n                  className='text-dark text-decoration-none'\r\n                  aria-current='page'\r\n                  to='/products'\r\n                >\r\n                  All\r\n                </NavLink>\r\n              </li>\r\n              <li className='list-group-item list-group-item-action'>\r\n                {/* link for mens products */}\r\n                <NavLink\r\n                  className='text-dark text-decoration-none'\r\n                  aria-current='page'\r\n                  to='/products?category=men'\r\n                >\r\n                  Men\r\n                </NavLink>\r\n              </li>\r\n              <li className='list-group-item list-group-item-action'>\r\n                {/* link for womens products */}\r\n                <NavLink\r\n                  className='text-dark text-decoration-none'\r\n                  aria-current='page'\r\n                  to='/products?category=women'\r\n                >\r\n                  Women\r\n                </NavLink>\r\n              </li>\r\n              <li className='list-group-item list-group-item-action'>\r\n                {/* link for kids products */}\r\n                <NavLink\r\n                  className='text-dark text-decoration-none'\r\n                  aria-current='page'\r\n                  to='/products?category=kids'\r\n                >\r\n                  Kids\r\n                </NavLink>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div className='col-md-9'>\r\n            <div className='d-flex row mb-3'>\r\n              <div className='d-flex' id='sortBy'>\r\n                {/* products found displays */}\r\n                <span className='mt-0 mb-0 fs-4' id='productFound'>{products.length} products found</span>\r\n                {/* handle Sorting the price from low to high and high to low */}\r\n                <label htmlFor='price fs-3 mt-2'>Sort By:</label>\r\n                <select className='badge text-bg-primary'>\r\n                  {/* onChange={(e) => handleSortPrice(e.target.value)} */}\r\n                  <option value='low to high'>Low to High</option>\r\n                  <option value='high to low'>High to Low</option>\r\n                </select>\r\n              </div>\r\n              {products.map(\r\n                ({\r\n                  id,\r\n                  imageUrl,\r\n                  imgAltText,\r\n                  name,\r\n                  description,\r\n                  cost,\r\n                  maxRetailPrice,\r\n                  discountApplicable,\r\n                  bestSellerRanking\r\n                }) => (\r\n                  // must return\r\n                  <div className='col-md-4 col-lg-4 gy-3' key={id}>\r\n                    <div className='card h-100 shadow-sm border-removal'>\r\n                      <h5 className='mb-0'><span className='badge text-bg-warning'>Best seller {'#' + bestSellerRanking}</span></h5>\r\n                      <NavLink to={`/products/${id}`}>\r\n                        <img\r\n                          src={imageUrl}\r\n                          alt={imgAltText}\r\n                          className='card-img-top thumbnail-image'\r\n                          data-testid='productImage' />\r\n                      </NavLink>\r\n                      <div className='card-body'>\r\n                        <p className='card-text m-0'>{name}</p>\r\n                        <p className='pt-0 description'>{description}</p>\r\n                        <div>\r\n                          <span>{'Rs.' + cost}</span>\r\n                          <span className='mx-2 mrp'>{maxRetailPrice}</span>\r\n                          <span className='discount'>({discountApplicable + '%OFF'})</span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\n// export the productpage component\r\nexport default ProductsPage;\r\n","// This function makes a GET request to the specified URL and returns a promise\r\nexport const fetchApi = (url) => {\r\n  return fetch(url)\r\n    .then((res) => {\r\n      // which resolves with the JSON response if successful, or with an error object\r\n      if (res.status === 200 || res.status === 201) {\r\n        return res.json()\r\n      } else {\r\n        return {\r\n          // containing the response status and an error message if unsuccessful.\r\n          status: res.status,\r\n          error: new Error('Invalid Response')\r\n        };\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      // It also logs the response or error to the console.\r\n      return err;\r\n    })\r\n    .finally(() => {\r\n      // console.log('It is over!');\r\n    });\r\n};\r\n"],"names":["_ref","title","_jsx","HelmetProvider","children","Helmet","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","isError","setIsError","_useState5","_useState6","products","setProducts","url","queryParam","URLSearchParams","useLocation","search","get","useEffect","fetchApi","then","resInJson","status","setTimeout","catch","err","console","log","className","_jsxs","_Fragment","HelmetSetup","NavLink","to","id","length","htmlFor","value","map","imageUrl","imgAltText","name","description","cost","maxRetailPrice","discountApplicable","bestSellerRanking","concat","src","alt","fetch","res","json","error","Error","finally"],"sourceRoot":""}